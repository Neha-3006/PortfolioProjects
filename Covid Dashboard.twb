<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table1)' inline='true' name='federated.1gdxzkv04qll1317g48mn1wy366y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table1' name='excel-direct.1yqyqkk1yly21a1go0h810kjzkpz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91810/OneDrive/Desktop/PortfolioProjects/Tableau Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1yqyqkk1yly21a1go0h810kjzkpz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1yqyqkk1yly21a1go0h810kjzkpz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/91810/AppData/Local/Temp/TableauTemp/#TableauTemp_1m4n5xa1inmt8g1gj0pgv0s4t6mh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2024 04:39:57 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BEE65BD0A3E147339AB2F88DD4397AA1'>
            <properties context=''>
              <relation connection='excel-direct.1yqyqkk1yly21a1go0h810kjzkpz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table2)' inline='true' name='federated.0snwkvp01htfav16j5x0c09b5ri0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table2' name='excel-direct.00l9qi010nf39313q1jn01twh8iq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91810/OneDrive/Desktop/PortfolioProjects/Tableau Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00l9qi010nf39313q1jn01twh8iq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00l9qi010nf39313q1jn01twh8iq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2A441FC3A3F94738AF9C32F36312809F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2A441FC3A3F94738AF9C32F36312809F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent' datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2A441FC3A3F94738AF9C32F36312809F]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/91810/AppData/Local/Temp/TableauTemp/#TableauTemp_0377d0e0m9q2bn1dihkop0q6armw.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2024 04:40:17 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2A441FC3A3F94738AF9C32F36312809F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2A441FC3A3F94738AF9C32F36312809F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2A441FC3A3F94738AF9C32F36312809F'>
            <properties context=''>
              <relation connection='excel-direct.00l9qi010nf39313q1jn01twh8iq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table3)' inline='true' name='federated.0nuvola0fthhnv19zn4vq0jc9wjs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table3' name='excel-direct.0sjl76a03y8esm1fkm67z0h7qnkg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91810/OneDrive/Desktop/PortfolioProjects/Tableau Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0sjl76a03y8esm1fkm67z0h7qnkg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0sjl76a03y8esm1fkm67z0h7qnkg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_19B932EF2CA14722B23179A50AD45948]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/91810/AppData/Local/Temp/TableauTemp/#TableauTemp_0fqn7qj0ax4d5g13ssgya1jk5pae.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2024 04:40:48 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_19B932EF2CA14722B23179A50AD45948]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_19B932EF2CA14722B23179A50AD45948'>
            <properties context=''>
              <relation connection='excel-direct.0sjl76a03y8esm1fkm67z0h7qnkg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table4)' inline='true' name='federated.0eadzp80nattkw17c2sqp0s8i29x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table4' name='excel-direct.1y90a3w0vhm27e0zsz0z913axyq7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91810/OneDrive/Desktop/PortfolioProjects/Tableau Table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1y90a3w0vhm27e0zsz0z913axyq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1y90a3w0vhm27e0zsz0z913axyq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/91810/AppData/Local/Temp/TableauTemp/#TableauTemp_0atf36k1xua4eh1gl1yjx1hns62g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2024 04:41:11 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_712FB04BAFBC414AA8DF224C351EEDBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='orange_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f59e3e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;China&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b04723'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c35122'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d55b21'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e66720'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef7925'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f48e32'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5a343'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9b563'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffc685'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_712FB04BAFBC414AA8DF224C351EEDBE'>
            <properties context=''>
              <relation connection='excel-direct.1y90a3w0vhm27e0zsz0z913axyq7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_82E8F02AE7054C7E9EC47A20728EA8E0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table1)' name='federated.1gdxzkv04qll1317g48mn1wy366y' />
          </datasources>
          <datasource-dependencies datasource='federated.1gdxzkv04qll1317g48mn1wy366y'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]' value='184' />
            <format attr='height' value='58' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1gdxzkv04qll1317g48mn1wy366y].[Multiple Values]' value='N' />
            <format attr='text-format' field='[federated.1gdxzkv04qll1317g48mn1wy366y].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='background-color' value='#eb622c' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1gdxzkv04qll1317g48mn1wy366y].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5750E88B-EDED-49AB-BD00-ED7F7D3721C5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table2)' name='federated.0snwkvp01htfav16j5x0c09b5ri0' />
          </datasources>
          <datasource-dependencies datasource='federated.0snwkvp01htfav16j5x0c09b5ri0'>
            <column caption='Continent' datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snwkvp01htfav16j5x0c09b5ri0].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{2268FB69-19CF-4350-B967-A48CB0541912}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table3)' name='federated.0nuvola0fthhnv19zn4vq0jc9wjs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nuvola0fthhnv19zn4vq0jc9wjs'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[Longitude (generated)]' field-type='quantitative' max='13460723.354464019' min='-14810347.331956454' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[Latitude (generated)]' field-type='quantitative' max='6805101.4546330087' min='-3814308.343448692' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[none:Location:nk]' />
              <color column='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.07596684992313385' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[Latitude (generated)]</rows>
        <cols>[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8D2D9C2A-499C-4AB5-959B-02A7A0244DBF}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table4)' name='federated.0eadzp80nattkw17c2sqp0s8i29x' />
          </datasources>
          <datasource-dependencies datasource='federated.0eadzp80nattkw17c2sqp0s8i29x'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eadzp80nattkw17c2sqp0s8i29x].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eadzp80nattkw17c2sqp0s8i29x].[tmn:date:qk]' value='214' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]' />
              <text column='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]' />
              <color column='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]' />
              <text column='[federated.0eadzp80nattkw17c2sqp0s8i29x].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eadzp80nattkw17c2sqp0s8i29x].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0eadzp80nattkw17c2sqp0s8i29x].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{2C475A21-C6FB-4A7A-A0E7-7F8EBE20EF5A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='97856' id='6' type-v2='layout-basic' w='87718' x='499' y='1072'>
              <zone h='19840' id='3' name='Sheet 1' w='39316' x='499' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36863' id='5' name='Sheet 2' w='39316' x='499' y='20912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56703' id='10' name='Sheet 3' w='48402' x='39815' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41153' id='12' name='Sheet 4' w='87718' x='499' y='57775'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='181' h='97856' id='14' is-fixed='true' type-v2='layout-basic' w='11284' x='88217' y='1072'>
              <zone h='48928' id='7' param='vert' type-v2='layout-flow' w='11284' x='88217' y='1072'>
                <zone fixed-size='325' h='44638' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11284' x='88217' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='48928' id='15' param='vert' type-v2='layout-flow' w='11284' x='88217' y='50000'>
                <zone fixed-size='425' h='48928' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]&#10;[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]' type-v2='color' w='11284' x='88217' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='16' param='vert' type-v2='layout-flow' w='99002' x='499' y='1072'>
                <zone fixed-size='150' h='19840' id='3' is-fixed='true' name='Sheet 1' w='39316' x='499' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56703' id='10' is-fixed='true' name='Sheet 3' w='48402' x='39815' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='325' h='44638' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11284' x='88217' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36863' id='5' is-fixed='true' name='Sheet 2' w='39316' x='499' y='20912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41153' id='12' is-fixed='true' name='Sheet 4' w='87718' x='499' y='57775'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='425' h='48928' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]&#10;[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]' type-v2='color' w='11284' x='88217' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{013E7D5B-4A79-4536-901A-23CB736DEB38}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gdxzkv04qll1317g48mn1wy366y].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39F08135-CBED-4806-B41F-D770198AB66B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45807D28-89B2-4748-AB1B-58BE5F130792}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nuvola0fthhnv19zn4vq0jc9wjs].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{09AAB26D-A39B-4FFD-AB1B-AE0A3F6C56CB}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]&#10;[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]</field>
            <field>[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]</field>
            <field>[federated.0eadzp80nattkw17c2sqp0s8i29x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBA68D51-02D6-46AC-A58C-B2CE90863A3B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.0snwkvp01htfav16j5x0c09b5ri0].[none:Location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Forecast Indicator:nk]</field>
              <field>[federated.0eadzp80nattkw17c2sqp0s8i29x].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{89F712A3-C897-495B-80F8-4118F06F059A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3Qd15Wg+1XVzREZBECAAMGcg0glSrKyLcsKtiXbsmw5dbudunvmhZk3
      M28tzVuzZtoz09PTbbvd7e5WWw6SrJyzLJEixZwJIud4L4Cbc4XzflwAJEgEkiIY6+MCb1Xd
      qlO76p590t5nH0kIITAxuUqRL7YAJiYXE1MBTK5qTAUwuaoxFcDkqsZUAJOrGlMBTK5qTlMA
      Yei0Nh5l7/5DpDIqAAcP7MeYYrA0lw5ztKFjxhsYaoaDR45N7KvpGEcaWxkffQ0M9qMZZyd0
      crib5p7hs7vI5LLB0LLs272TnTt30tk7xFyM1BtqhsHgyGQFEHqOJ/7hZ7T1hxBqko927Aag
      4fgxppJBy0Zpbu2b8UZCy3G8uXViPzXcwa/+4Ve0DUYB2Pnh+6T1sxM+FR6gYyB0dheZXDao
      mQgfbduLw+Hg4Mdv8Nb2I+f9HnoqxEc7D2A5+WBv424q1t7J525cOeVFjfs/5p3tB8HQuPb2
      +1hbY+HgJ39kdOgY4aTBX/7lj+g+sosPdh5EzWbY8rkvs25BwWnp3H7PfXz09uvUf/vRiWMv
      Pflb7nzsG7gNnd89/TTf+Pp9/Kd/+9+oWVbLwGCABTXzCQ8Pcc2dD7PcDdvfe42u/e+Ssxbw
      o+89yr6P3mBvYw+6pvPVx77L4MH3aE/Y6e/s5KEv38MzT72Aw+Vg1aabuXnTqvP8Ok3ON6UV
      1axfv571axfzz0+8RqDayjOvfIAiGay/+XOsLtd57r2jJMODfO6LX6frwHs09obwF1XxlQdv
      5bdP/AZVkimsWsLXvnArP/0vj1NYXk14JMi93/ghHdtfYfvejskKEB4JU1G7gmwqxO9+/QzC
      O4/vfeOLE9/vOtzCT37yE2R0/vXJ37O25hbWXX8rDz14Cy273mJv4wDXLFpGXe8QIyNB9h44
      xLoFnznt4WS7l/ULC9jb2HPS0RNVzHiVt3jNZr752IO89tyv2fKFx3BpQ7z63lGWr/Ky5Y57
      +dz1y9j26lN0DofZf6ybO+++g1Sol2079rPYqZMULv78J39GdKAFTbKyesO1bFq3/Lz+UCZz
      Q9Ph3fyOJIlIiOvu/jIfbn2dW+64A6cieP+jj1l9/w30DUX4D//nn2PVwmyN2vnJj34IwJFt
      b1C+fBNLqwr58O23iem3UrZgGd/65qOMdOxnX/cQn/38/STcxyY3gcqrKmhrbsXuKuK7P/w+
      diM1SShJlpEkCUmSkceulCTpxPdIvPjcsyxZdx333/tZ7BaJ6dh4050c2/E+uak6F+PpSRL5
      5KWx+0gn9GTivhKS0IlGIvT39RFOSWxYtQgkhfXr1yFJEgVVS/nx9x/DKRL87pkXz+T9m1xk
      Fi5by3333ce3//QHrF1cSTqZYGhggL7+QTZu3gzA6nXrscoSGBqK1T6WXyQy6QyjwwH6+vpY
      unY9NkCWZSQJTs2Rk2qA8vr16Nv/id/8vguPQyGam3z6igVl/Pq3v8eiJalYsgkkidaj+3jJ
      CNLZO8KPfvxZgocU9u/diRYfIW0pm/YBJcXOZzYt4a+feJXPfQVKShw899Rz2Iw0o3Ftltcj
      c3jPNlK9BxmKGdxQVsLqpZUMBEexSxre0gVYTzo70NXIO9sP4bKD11cyS9omlwI2uwOfzzex
      f+N1m3h3bwuVJX6iWVhRUXniZEcpPq2fp599AYfDy+1brueTJ5+jwLaAeDzNtTeenr7F5Weg
      5RDSqc5wQhiER0dRDSguKcYiyyQSCdxuD5IkiIRG0SUrRYV+hKGTjCdIpNOUlJZhVWQMXSU4
      PEphURGqquF2Okim03jcbgAMLUdGBZfThhA6IyNhiktKkITO8PAwHn8hhqbi8bhIJNJ4PG5S
      yQR2lwdZ6KTSORw2hUQqRTqTo7S0FEWWEMIgNDKMUOwUFxaQy6SQrA5slnxVFY+GSWV1SkuL
      kaXpayaTi48wdJKpDB6Pe9LxRCxMIqVSUlqCLDTSqsDttOevEQYjwSB2tw+fx0Uuk2I0HKWg
      qBinzUoimcTj8aCrWbK6hMthI5OKn64AJiZXE6YhzOSqxlQAk6uaSZ1gtf0w6LN1QE1MTsJq
      w1q3+rwmmcvl5sT6OxWT+gCjf3EzIhE+rzcYTuboTWlIssz6YsfE8UBKpdx1YqwmkswSQmGh
      20JO02mKqiwttGOXL2yHVdMNjoUyGECt30GRLV9JjmYNimzyxOhrJqfRkTJYUWCjM5IhKSSW
      F9hQpuhgp3MaqiQTSmYp9DrxK2chkBAcHU3jtlup81pPG8YDGE6rFDksNIYyrCh25qt1IWgJ
      Z9BkmeUF9imvm+GmBFI65S7LrGfKJVUU/fTts0p9NsL7f4d1ZOdpxyVkBAYCccrxPGKa7ZPP
      NICcoeCQ8+4HyuOPP/74+Nfpt/8VcplP/wQnMZpW+eeGEKU+Ox5h8GJ3nHl2hX+3c5Bij532
      4SQNCR2PodKSk6l3K/zNwQA2i4zPrvBmR5ScIpNK53i9N0G9385r7WEUm4VgNM3bg2lWFNqn
      zHjngmYYfNIX4+OQxpoiOx92R0lLMk83h4kbEEtk2T6SZb5DYseIyupCG786GkQS8H4gw0Kn
      zItdCRYX2HivM0J3VnB8IMJTfWlkTedwJIcuSUQSmbzsBbPIbuj8z6NhEqksg7pMLp1l52iO
      OpfM0y1hLDYrvzwwyIAq0R1N0xrJUei24VPgb4+OgqrSqsoMhpIMqnnFbQhncMjwUkeUCo+V
      1zsiuBxWOsMpPuxPYFMk/t/dAar8do4EEnSmDaqdMs+2RogLCZuh8UpPgsWFdmxuH847H51e
      /nPgyL4DlMp9yJJgzPqDhAAMQCCd8sfY33Tb+f18GmldAQQ22UBCzH0foMbvYHmBndsrXPyh
      I8bNxVZeH8ywpsTJxkIbqpD4pCdKbMwhTggdt93BvbV+ihSwWWRe6YiytS9OUhPs6Y0SkRRe
      aI/wx74EKc2Y0k/pXLFZFLbMc7Gm1E0wlMDidvBeV4yaIjc3lztJG4KmoQTd2RMefD6nlQfr
      C7DoOr9vCVMg6bw1kEaXJN7vjFLps3NTlRePAkuKXOwZTPDhmOxn4ge4wO/g28uK6AyneL47
      Sc9IgsaEjtOm8HJHhLpCJ3fN94CA1YVWPgnmC7GsahDMGBjpDNvDOh90R9neH0NTLLzaEWXL
      fC/7e6OoFgvPt0XYGUix0qdwJG6wtsTJSp8VHXinO8q7nREWlnk4NpzkqZYILkPjvaHs+Xvx
      JzGUkDnQapDTJE5kYsZK/glL6FmlOV5r6ELCLp946xe0E+yW4f2BFPM8VgxN59BImo+DaYRg
      wttUkhRyuSy/bQ6xayhJS0JDAAt8drrDadKSTPNomiqvnYV+G03DKcL63LQXCx0WjgQS5ABD
      09g7muHD/gRCgH6S1oWSOZ5sGsXusOKzSDQldIolnV2jWRBQ6LRwYChJ2oD5HisORaLOd+ay
      t4yk+PuGUVaVuJB0nYws0xdK0p3WEUCFTWbrUAqbRaHKbWG8hVXmsfHV5SV8vsrFaCKL32nB
      brWwqcRBmV3mg74EFovM8ZE08312PDYL85wWJCSyOZXDoyl2D2cQAtxWmd0DCUZzAq9Foi1l
      UOWYm+yTlKwc7ZY42GIghGD836lIY//ORhk8iooinUhrUh8g+O/vPe99AIBYzsBrk9ENQSCj
      U+mykFR1ckLC0A1kWcZtkdCRcCmgGYLBtMY8l5WRtIbLKmMBopqgwqkwnFKxWS0owiBpQLlD
      OcvyYGY0Q5AR4Fak/P1tChYhiGoCqyQwkPBYZVQDPBaJ4bRKVkhUuiwIQ9Cf0pjnthLJaFgV
      Gb9NJpDS8FhlHBaZjGaAEGcse19CxWaVKbUrpFWDsGowz2khmNZwW2XcikQwo+OxyrgsEmk9
      L1dUNfBb85k0nNVQkXDJEi6rDAKGUiqlLiujaRWXzYIkBC5FIm2AMAx0SSKnGVgUmVxO44+D
      SRKGzHcW+xgce0ZHaSUljz93Ht8+PPv0U+w6eITbSiPcukaaMvOfYLyWODOkU972JAXo7+9H
      18/SN/kS4eDBg6xfv/5ii3FOXM6yWywWKisrZz/xLHhmbxN7e4LcE3mRzVVZTh4HmU0ZTu4E
      T6cYJyvBpG6+xWJBli9P00Aul8Nqtc5+4iXI5Sy7opzNkNaZUTSwF9m+jF19VgZDOR5YLUCa
      KjNPLv3zDSIZMdbpBeMUFRhTC5E/O2kopiHM5NIj7KiETJzQ9Y/RFbXQOixhGFMNap7epGHS
      MemkfzLSWO9IB8KaDSEkUwFMLkHqN4CsIJfOZ3TZ53ivGbLa6Rl9vDk0lRLkj8tj38oT50jI
      KBI4ZQ2brJsKYHIJIklIC/NzOSyL1yMcbhJZULV8hp7ykpOOi1OaRZO38wphlw1UoTC7qe8M
      yKUTHDjaxLWbriEU6OFYSzcl8+azckkdAL0dzfQNx9l4zUY6Gw8zHElQv3Q1FaV+YiODHGlq
      J5tOse76z1Dkkti16xDX3bAJCYiHgxxtbKN28QpEMkhnX5BkRmft8hraOvtJpnPccutnzsdj
      TEl/dxtd/QFqFy7Faxd09AZZtyY/ZVTXshw+eBDD6mXD2hU0Hz1IWnKxftVSJEkiHh6moamV
      wvJq6quK2X/gEGXV9dRVlXLs0H5Ui491q5fOmeznSn93G119ARYtX0N5kRchBL0djei2Euqq
      yxjsbSOu2lmysHruhcllcMgarxwT+OzwhVUSTttJswfhlKwvpvzmVGQJbJJxfmqAeCJJoLcH
      AbS3t7Px2hsmMr+RS9LQMcTqRWXs2t/AwPAoN27ZQkWpHwBfSQVbttyIoet4XVYO7v6EoWB0
      Iu1du/eyafMm9u3eTlXtEm68fjOGnmNeVR1bttyA0LLYlLlzlygun88161YT6TpKOqPS19E2
      8V2gsxHhr0GJd9PS2khQ9eJOD9AxmjdEaUJm46ZraW06zP7dn7BozUYajx6g9eBOLOWLWL28
      fs7k/jTY3X6u3bSO/fv3AGDoWYSk0tnSB6gYkkH7LNFAzheSt5CBdV9n9QI7OcXJS012tEkD
      ldOP94y7TUw3cmSTjfNTAxSXluO050cxKsrncfjAPoQss+XaTehqFofXjctXiprtpdjtZP/B
      w8iKwoY1+cnpQx3HKVqwnJGOoxzpDJAaGaUvsJ7q8mKWLFnMoYOH0MZGa4/s283qjdcC0Hxo
      L4vWbJrbCS5qkn3H2qmtmEd5RSVW5USZYUgKyeEeZN2GCAfwV2xknhGjKZamvsSJVVLZs3c/
      y1esp7vzOIUuO1a7ld5wgjJbN9saQqzfctPcyX6OxEcG6O6FTZuuA0CxOKiYV0J7ZwCwUjW/
      nGMHhy6YPKJyMe/avscq/UVGhhO8uitDjUWdMltPNoyJSd+ckiognR8F6GprpK2zk8JDDRS7
      BMJQyaoK3U1HcFTUQ2yED//4IfXrtjDaeZh0bBRvaS379+xh3eZNHGsf4LY77kSW4FuL1rBz
      207ml3rZs/cQtZUF5LJZamoWYahphlOwtsQHGHQHY9y5di6nOAo6OjqRDJVUWuPYwb20d3bS
      2NZNKhSgap6PdCoNuQz1a27g4I5t9CFz292r2LP3EKO9jViL5zMSCrGirpr3PvgIxepm88r5
      7DjURi6Xw2659LphH23bzuIVawmFQgx2tbB0aT27dh2gtTXKqjU1tLYcpL2zm/7gGmoqii+I
      TKKkmubR69nQ+TJxDZZZdKbO6Cc6v9MbyKSJ/ycZwgKBAIZxllGqZqCxoYGlK1YypUOnUGlo
      7GDliqnbwPFgL2H81JT5pvz+VLZv386WLVs+hbRnwWyyD/cSFpeo7OcZRVEoK5t+7ve58If2
      CPvjU4z6hAPc/f5fY8FgmV2bKO0n+whNHgadmfNUA0zH8pVTxxfK39s6bQYC8JZV450Dmc4L
      s8leegnLfjnjKSAkO7jZGjvpoJihrD/16Hjz6MTxS6/+NTGZDouNYvvkMlvAtJNnTj88uaYA
      UwFMLifSCbzaifkqJ5o+k5yFTsr4Iu9NOkkTJm+bCmBy2SAloxSRPv34WPA0xnx8psMwQNcl
      DD2vNJomJvcBdF0/r53gC0l5efll68l6Oct+IXFk49ikqTq7Y9l+muHw8eiFum5g6JBKpbFa
      rRjGKXaA8+3WeiGZP3/+xRbhnLmcZb+QpAsqiAgrZZI6w1knOrnSKQphURSSmQxOpwNZkUGI
      uR0FMjE5n0i5NE70WWZF5hVgvN0/rgRCCCRZwuGwoVgUJEkAstkHMLl8EAVltNnL89vTGrmm
      b8IbBsTjKeKxFNmMTiKeNhXA5PJBkhWaqjeSNBRAnmH488TI0KmKYrFYsFgsqKqGEOYokMll
      xsCyW3jVMh8DCSFOtwGcvC9J0tiwaP6YLAu8Pgcutw2P14HX5zQVwOTyQrJYia28FQHIkjJp
      nF8IMbFGwHj/d3z/BJPjBZkKYHLZkVywih1FeU/ikzu545za7JkpzOIkBRjq76G5uXniL5I4
      3eigqxmi8eS0Cfa2NhPPnYgvGgoO0tzcTHff4FkFsIqHw6hjNolIoJv+0cSs1+hajraWZpqb
      WxiJxM/8ZgBCMNDbTXfvAMYZCpqKR0mPPauejbL/UNPZ3fMk0vHYRFoms6BYOLT0DnbhJ2mc
      yMInl/QnzwOYXAuc7EF6Sg0QHgnQ19nM7559ib6+PpLp0yN/JYa72LqrYVrZ2o4cJpI9MU77
      7kt/oLmrj8N7PuZ//fxX5M4wiNWud99mJJvPEKO9zXQFYrNcAZnoAH94/nX6+np47Q+/5pMj
      Zzppw+CZf/0l2/ce5tjB3bT1jZ7RVc17PqYtkJ+8I1s9rFxWd4b3O52WfR/TOhid/UQTALTS
      +Xz8mR/yr8u/Qr/shbE+AUw/PfIE04RFWb52E8uXRuiLCW6//XYQgo/feZlDbf0YhszXv/UY
      77zyKvs64gT723j06w/x8tNPEkrkUFzF/MljD592K8Xq5KZbb6fQBp0HPuC9Pc3cstTHb59+
      EUMI1m+5m+tWVvPUb58kljGwF1bylTs28N72HRwKjLJy1UaW+uCPb77A0W0KhqOYHzz2EC/+
      /l8IxDR8JdU88vC9E5pcu2Qlt99+B9qN6/nds1tZUqjxzMvvAoJb7vkSNZ4E7+9oZ3iwndvv
      /yqL55cQ7j4K89bx0D03TLyalsM7eXvrPoQwuOv+r7K8MMt//NunqCkvIJYW/MljX+LN9/+I
      tq+FppVr+eJdm3jrrZ08+OBn+B//+b/in1dJOJrg23/2I6zJQZ5+4Q0MBDfcfh8bqmT+4//+
      /VhaBn/y2EO8+e4HZP1NNK9cy0NfuOPcc8ZVgiTJSL5ism4/b+bC3Mk20lGBJ5SjXBgTQZVT
      BmgCfBPRWyY7xM1oCNNyEVqHVH7yox+RHOng5fc+4d7778PbEOO+OzeDENx62+0cbmjmwI6d
      jORmLt1rly7jozeO81FfgNs+/0WK3AovvvwG16/9NrfedjvHmtrZvX0vfO0B7txyI6vu+xIV
      Thvt+95lyx1f4NZ1tfz6yd+AEAwGR9mw5S7WrFoxyR7S3niYt94yGOzpYM0t9/Peh+/ywEMP
      Y5dUXnnzQ+bfvZ6jDW383//uB7hs+ccf6uujdvG1J6Wjs33vcX744x8j6Wl+/bsXWf7gjdSu
      2MT3vnQ77730LCnFyz133IZlyfWsri5Gy0VIpzOAoKhyEd/53qM07XqTrkCcvj1b+eyDD+G1
      Grz82nts+NLN1K64hu996Q4+ePk5kpKHe+66HWnhdaxZcGEmmFwRSBKSxUq8bjPl2T28aVtO
      WUUURe0gE9LzNYJXpqhAoac5Q3VaO906PFP6Qstgd+YndTh9BeiZyX2CxHAnz76xnXvu3MJo
      V8spczVPp6+9jZKqKiLHj7N358fYLTJVC+oZ6WngtY+Oc+fNm+hvamOqlrDNZht7ZglJVvju
      n/6Ao0cO8w//+C/8+Mc/wDEWArCkvJJly1Zww02fwe9xsufNIXZs24osQe3iJQBsuPb6icwP
      UDqvnKNtHVy7uGQioJKiOFBkCSQ71rHSw2a35VcanGUKps1mm9TuDI0E2b1jGxYJqhcuPumc
      09utJueAt4it4ZV4nAZHHTdyi6MHV61lUtiUpM9B94cpimRBFIkqSSBJs7hDW1xl6OEW3n7/
      Q574p9+w7rpNODwFNB3+hI937EIVoOaydLY20djWO2UaupZh146PeeeNV3h+WzN3Xbec6zZt
      JJrMUVpSTDqTt8blsmnamxto7RoEoLzCx1uvvsnh462npWnoWV57+TXSqoFVkSdlG39RKXV1
      tfg9LkBi8/q1JDWJkqICMunTO/UAJQs3kO74hFdef4d333yNlt4oFYXw/Ctv8uLTv6F4wdRr
      CxeXF7H13bfZe2j6PhHAtZvXE0/rlJYUTitDUVkR296bPS2TyYhMfkCmofweHCKNc6iBHf0F
      pw24uOwSvg1OwnUOqm520zMW0e70RfIMjeFwnNLiwvwNDI3WlhYKy+ZTWpSvDULDg4xEMyyq
      ryMU7CeaEZR47DgLSshEQ9j9hdjHJo8PD/YyNBLB6SlgYW31xPTI0PAgg8NRFi5ahNOmEBzo
      JaVb8Tks+EpLsQhBd0crVm8xRS4FVXHhddoYHh6mtLSUdCJCR3c/NXWL8LryKwXqapZwLE1J
      8eTV6QMDPYTiWRYtqkfSs8RTOoUFnlPepEF3RzuqbGdhbTUS0NfdjrB6qakqBy3DcDxHaaGP
      aGgUp68QmyLR39OJbnFTXVHMaChGSUkBw8NhSkuLScfD6FYPHoeFkaF+guEk9YsXYUdjOJ6d
      Mi3N4mZBVfmnyhSXO9NNiZwJkU5Q3vYWnytp5vf2b7Il9gY3lQ2ANHXgrN5+HVtD2lwl0uTS
      41wUAECJBVgbfANFaOwte4Dbws9xQ9lgvjl6ihIIAfs/zpiGMJMrB91Xzv76b4MwsMUDHHNc
      w3DSNtEcOrWoX329w1QAkysLCWiX66kb+Zigdwm/U79AT1AjmcgRj6VJpzUyaY10WkPomqkA
      JlcYkkSo/g56q27DPdpComIdO4zbiaYFum6QzeTI5TQMw0BTz1NoRJPJZNNJgiOhqX1QhCCR
      SAI6PW2nj3CdSiKRMAdHzxZJIlmylET1ZiRJorf6Bo6wioJCF/4CF16fE7fbhstjMxXgfGNk
      o/zyl79i646dpFJJtm/9iJFoko7WJnZs20Yw0M9/++lf0dTRRyaVpbnhEB9v30lW0zi8dydd
      AyN0d3awb+d2BgYH+e9/9VccODa7ophM5mQ7TFay0CdVjYeCy88Gk/IhtcwpkeeZ0Z4mlmy+
      m3u2rOCDV5/GPm8pL730MnImzPL6SnY1OikpKaGk0M3Oj3fRG+2juqSQrZkYfcMZUvuPU+KE
      FRtW8s67uykpLqGy3LQOfxokiw3N6iaWkfDajbEVZPJBsswa4DxTWFnP8d3v8cHW7SApBAND
      IFvxFZezrL4GyerAKlRiibwBp3ReNXXzyxCSTGfLcRzeAmSnjzWrl6Gg4HXIjIZndwQ0mZlA
      +Wb+Uf8m+4MFJLL5ZZSEMC6sHWB8wsKVTiIyQt9wjMULa+hoa6OqdhGpeIQCj4NYTkZkIuQk
      O3YhEDI4bQqGzUNkqAdh9+G0ypSU+AkGYzitBqGUflUZx87VDnAmCCHwhFq4Pv42a/zDMyuA
      rusoioKu68iyMl3YlTNmPD0Tk5mYSwUYRwiBPNo7fRMoEQ3xP/76r2lra+NvfvbzM54kYmJy
      OSBJEqKkZvpOcDoZx+t209PTwx133TN1iPNPSzoER584++tWPAqeeedfHpOrjmkVoLRyASVu
      hcDwCCPxHGuWL5rwpggM9NAbjHHN2hXs37MbT0EJtTVlHG7owGq1UeqXGU7aWLe8hrdffYdb
      H7gXx5R3EaDnzkHs2cM3imwUkZt9GuUkZCuy+/zGuje5tJlxGNSCALcPt2uy52R5ZQ3hRAsI
      A8VqQ1VVhnt7qV2xlkj3cbK6AkaO6GgQl68IIQS6YWAYxuSwFbrOufQIdN1AaDPPn9Ub/oDe
      +uJZpSv5F2K94+/OQSKTT4skSRelfzijAtx0172EYklQbFNGoTOQWLZiFYlAO8MpBXs8iaYb
      2GSJEr+Tpu4Ryou9cNLDTXrIc3xgRZHBMrMJwziXNpuUD5xkcvUwox0gEh6hr6+PPzz3AsZJ
      feCB3i6ymQwjoSiBgV7Cuptly5chxwcpKK2kpLiU8opKqirKmVdVgXWun8LE5ByZsbhLxKIE
      g0HsLvek45XVtVSOLxFbUjRxvHbRkknnVVeZHVWTS5sZa4DS4kJUTWfVqjVzuxSpiclFYkYF
      ePeD7Xzpka/T3XLItAOYXJHMqAD33Xs3Lz31W5avv3Fu7AAmJheZaRXgyCfvERRFfOMb32Sk
      r2VSJ9jE5Eph2k6w22lj+969eLQ6uvtHPrUfkInJpci0CrBw3U3gPEZL5wDf++53zE6wyRXJ
      tAogSTILl66mbsnk2OsmJlcSM9oBXn/ut8R0G4rDx8MPfG7CGhwLDzMUTrGkrobuzjaSqsTy
      JXU0H2/E5imk0CWIqQ4WVBRz5MBBlm/ccEUZw7If/A1COz1y9kxYVtyFpXrDHElkcq5MqwDt
      TUdp6+xj5bU34XJONoRZ7R4MLYyWS5BUFcodWY43NOKrWkxyoIWI7iCUiFHhkxkcCrH4pOUo
      T51+cC51isgndA5XnkHaZ5Bubv8zkD07Rzu5eAFi/vpzFeuq4GK0MKZVgMKSMubXL2HZwgXs
      O3gYIdZP5FanywmAMAxkxYLNppFKpymxWUjL+Uzkc1hp6w1SUZH3rjSmdIYzzskZztANxCwL
      S5/TRDfBmS1YfQ5JG4ZhLoY9A5ecM1xsZJD3P/iAWDRKUrdMGgUa6O1iOBikqLgUIxOmLSGz
      ft1yjhw9gt3locDlwOXx0dTWR7nPjTytM9y5TUk+I2e4cylNztQZ7hySlmXZdJWYqzAAABxL
      SURBVLS7BJn2F6ldto7H/9N/IJPTQLZO+s3zvkC1AJSNBdEF2LBhchV/zXr/eRXWxOR8M2OR
      9OHbrxOTnIwMj/L//F//FsUcBJpTUgfeIfTrf3/W11X9zV4kxaxdzoUZ39rm628iZ2gcau4z
      DWEXAKGpGMnIxRbjqmJGBQgFeviwMcDCEteFksfE5IIyYy+0u7efIq+Nrv7gXI06mphcVKZV
      ACEMlq9cQSYS5gsPPpRfL8vE5ApjWgVo3f8Rh/tyfPWhB3n95efM+QAmVyTT9gH6+vuIR2zs
      2BVlIDiKYQhkcxjI5ApjWgW4+fNf47pcfsX3u+7+7DRNIEHD4YNYHF4WLqzheEMTNpeHYo9E
      OGNnaV0Fn3y0nWtuvRnbXD2BicmnYIbIcAnS2bwCICs4HfbTTzI04skMxd5iIn3tlNWvJN7b
      SCJtJ5nMkIpZSeUEuhAYQmAYkwNaSca5rdBhGHPkCsEZukKcA8IQs6YtxOwBv6bCMHTOzavq
      0kGSJGT5wgcrn1YB+ns66AuE8zs2N7fddN1pr1hIFjZfdz3h3kb6IxpFRQaC/MMUuu00dw9T
      UZ6PGjG+YMHJDk/n6vwk5VeYnv2cc017Djj12c/nvSVJnvV9XOpcLFf7aRVg2eqNyMYuPtx9
      FMPq5rYt151WyAhDo621jZwGy1ctp7WxCZu7AL/XhtPtId0zRLHLjiKNLUdwqpZ/ikwqzVFp
      MWelkHQmaV967+NKZ0ZD2Me7DrNszRqajh6d0gFSVqwsWXZiFfUVq1ZP+n7F0vrzIqSJyVwx
      Y7GxavVKFlWVY3MXXO41rInJlExbA3Q1HeKJ3/6ezddcQ89wLG8JNpXA5ApjRnfov/yLP6fQ
      56OwdJ5pCTa5IpmxCdR6cCf7G5r5m5/9PYYZGMjkCmTGTrDD4SAUDWOx2Wdt/gg9y5GjTdhc
      Xko8EqGsjaW1FXyydTvXfMY0hF1sgjveJBvsP6tr3AuWULThljmS6NJgWgVoOLCDlbc8gM+i
      YXe6Zo0LNNpzwhAWT9tJJtN5Q1hWYM6EvfgMvvMMkSOfnNU15bd96epVgEBPO69vO0KJ1wbO
      Qr791QeRZ+gHyLKct9CSH5cucNtpOckQZmJyKTKtAviKy/nqlptYcIaTYQqr6xlsaMLu8Y8Z
      wrxkuococtvPKfKDicmFYFoFuOamu88qIUm2snL1KYawZaYhzOTS5oKsFC/GHOEMw5jsDmDo
      kBk9+wQdhSCfiDU3/ggn+5OITAiRjZ5durId2Vs56dBpMgPGcBucpeOa5C1DchbMmLaRiqOH
      zq6jCmCtWjrJrWQqmTOBXvRM6qzStXj82Isnr/IzVyEyhRAoioIkSRdkoexxLogCjDPVD3M+
      mEoBzhdzJfNcpj2X71kIMee/4YVUgAvqQTVXGelMPC1PRstlyGpnVoKfrcypVOqMA8fN1fuY
      NV1h0Nfbwxm+ggnm0mX5bH/D84Xy+OOPP37B7zrG3p07iCdT2J1uhBDkclmEppFMJxCSlcBA
      P3aXh1w6QSA4gtvrJRkNkcjouKaYnxAaaGdPYz/z3AadwSx2MkRTWewKJFNJhnraOdzSh8ui
      EgilUBQZpz1vodj27uu4y2tx2abosgvBkUP7CYUj2D1+UrFRMhoo6AjZSiaVZNfOHWBxEBoZ
      JptJ43B7UWSJZDjAh7uOUF9XfVaeJE0NBwhGcpQW+ejv7UGxu4iERrEpEn39Q3h8vrMOWb/9
      g7dwlFQT6mmiL5yluMBHPBEnEY/jcrkIDPYhWRyEh4dQhTLxbqbEUDmw7wCjoWFSmoLLCgPD
      IbwuO30DAXxeD6HhIZJZA6sModAIOgqxSBin005fTw9Wpxur5fT33RDOMJi7AmuAqZEwcikG
      gqO0tbcz3N1B29Ao/Z0tOLx+mpuaaGtrw+ey0NLSTkdvkEB3J+qU7qkWij1WRmJpDD1LR/cQ
      iUAPfb29HG3to6DAT2l5GXYFNBQGensAyMUCVK/YxHB/37RSOuw2DMmCkoswEMoy1NNGf28X
      KRXaOjrw+AuoKC8hm0zg9bvpaO8FIDASYdXCckYTuTN+I8LQkaxeJD1FdKiXkZSOMHQioQi5
      XI5sMkxjW89ZveVcfJjKJesZHezH4/Uzf/58WhsOkchohCNhBrvbEHYfEjrZnMrRI0eYqYLI
      RIN4KhayatVa4uFBmlraKfB6aDx+HJ/HRktHL9lslqaGIwz2dZLUrfR2dzEaiSA0FVXTOHr0
      2Fk9w1xwURXAV1TKsmVLcTksGIZOOpMBrCxZvAhE3hINArvdid1uA0NnJDhITjfQp2lnlFbW
      MDzQgxAGimLDblXQDKhfvAin3YYsKUiyQlFRIdaxaGo9/cOk42EikRDZTAZV10ilM5PSrayp
      p7bUTktnAKvdgdUiYwiBpuXI5lRsFguSrGB3e/F6PchCB2EQCoWIJZMM9Q+QSqVQs2nU6YQf
      IznaTySRITI6ivCWMs9vp6M7r5w9PT0Ul5QgjLMzL/YNBEknIoTDISRFwWq14vYXsaAyH7xY
      0w1cTgciNUpUteC0WWdsytlcPlKRENl0DNniQJYtOBx20sk4fQMB7FaNodE0PpcNQ7JSWFCA
      ZSwu7FBPNzZfIZZLwL/sgnaCT6W3q51kRqWqppbQUB+GxUl5gRerz4eiZens7KGsqpqOxiO4
      C8qora0hFBwgkYXa2vmnaW82nURYHGRjo+DwocZHSekK8wo9GFYndotET2cnBSUl2Bwe1EwS
      n89LJBrD7/eTiEYwdAOr200ynqR0fA1kIQgM9hFLa9TVLWC4vwdh91Lqd9LdO4jH56fIa6c3
      EKG0yI/X5yEeS+F124ilNPxeJ5FIFFVVcdtkhKMAt31660gsGsXj8yNySWIZg9HgIGWVNaDn
      kIXKcDhBQVExhT7PGb/raDSKz+8nGYugWKyg2FCzaXw+H7FYDK/HTVdnB0VllYSCg9hcPior
      ymZstoWHhxiJpamtXUA2ESYQSjJ/XiFdPYNU1SwgNNSHZHNS6Pdic3rIJOMAuOwWOnsHKSgs
      pLT4dEPpFTsKdK5Eo1H8fjPQ7tVC82iC4dyFyZaXhQKYmMwVl0An2MTk4mEqgMlVjakAJlc1
      pgKYXNWYCmByVTNJAXKpCK+8+DzPP/8Cew4en5OI0HoqQlvv0KRjidAAzz//PM+/8CJHmjrO
      ZRHGCbZt/WjK42oqQsf4fQ2VbR/vPOu0W5qbp5Wtp/kQv/zlL2nuGZ4lFTFjOifz8baPMKdi
      zy2TFCATDTKSsnDzzVtIDhzl3R1HQQhikRChSD40iqZmSWdV4tEwWVVDGDrBwBCJVN5ymk0n
      CQRH8sojDBKJJPFomJFwFCEEge7jfLhjP4OB4ISCRQbaUN0V3LTlBjr2vsve5kFAEAmN5O8L
      GLpKMpkiGBiaiFmaTCTGvAjz9wHo7u4GQFdzDA0NEk3kndMGu5rY+slehgJBdCxsWJ+fuyCE
      wUgwQCyRdxXWchnSmSwjw4GJZxpn9649AKSSSXLZLIGhADlNJ52K88o7H3HPvfdRXebH0FUC
      Q0NkVW3sHoLQ6DDhaJxUPMb7777P4MAAyXQWRP45I7HkxH2y6SRDQwHa2zs/VWFgMjunTYhx
      e/2UlZXjvv46Xn6/keP7QnzS0I9DpKheczOL3SFe3t6OTRZ84YH7ee+l32H1lePwFHHbNQt5
      8tm3mVfqJ2vx88h9N/Pf/+t/YdmadYQHurj9K39G3/HjdLVH2eu389m7bmfc98zrL6S8fB5b
      rlvP1r4htJ49NA8lkXMx5q/cwqaFNn76v59j4zXLaGnr4kd/8W947dWX+PLDX8dmSfPiC2/z
      zce+NPEcn2x9j2AsS6Cvm88/8n1aGhvobAuz12fnrjtv46UXXuEb33yEN57/HTHdSXx0gGvv
      eohStYtfPLedDavq6ega4t/8Hz86bZX79199mt64THmBk5jm5rM3LKW3f5CD+/ey4botfPjq
      H/AUz2MwGOY73/s2O996jt44OGQb6zYsoqe3h9179rB20xaCzbtoGUygJcNsuO1+6rxZnnj6
      dWoXzKerf2Quf3sTplCAPdveJjTQiKFLPPC1R3njqV+xeOV6wODg7u0svm0FsrOY7z7yOZLD
      rdjmreHhz28B4P3nf0t5bR1FTgt7d+8jrd9M/cpreOSrX6L74Id0jUTZsuUmRj0h7rv7+kn3
      /eMbL9BzaCsGFh799rd56ZmDfOtb30FC59e/+T2bFl7Hpi2388A919Gx/30ONE3vuIYQVFVV
      0tK5l2R0hKa2fm688WbiniBfuPtGIF8y62qK0aydxx59CKGn+c1Tr3DHxhpuveeL3LlpES8+
      +RtycJoCYPPwta9/kSK3zG+ffJbK2qWsXLWSBx54gFjvEQbTdjYXFhIb7KCxs4/uqMx3vvHw
      uHCsXLmKBx54AAl47enDrN5wPUbOxe5duxi0Z3j0T39AqctCKvHkufymJmfBaQqw+ebP8tX7
      bx3bEyBbmFdRiSzBwiUrIdFF/eJFSBJIsgVdzXs5CiGQpfwK85V+Bw98+YvYpupiS1OHLr/t
      81/i3htWnDggBIJ8M2pyTCJBLJ7AVeU86VQxaQ0zQ83w3sf7+Na3v0u4bTeHI/mwdqfeVpJk
      DEPPN7E0lXNbt/70NF0eH5WVlVRWVlBZUcAhXTvxzFL+2RACJAnFYqeishIJWLaumMNb3z4R
      gsY00s85pymAdMreHVs28eJbb+N22KhZspYN80/kalfxAtyZrfz8F39PcWU99992O//wL7+n
      xeXG4S2hbsHnT5qql48QbS+sonv/s/xTsIdvPvIwdos85Z2vWbmQv/vZzxCayo13fxFQ2f3R
      Wwx07kPYi/izW0rRurz8/Be/wO+1kVBP+ApJFitWPcETT/wzJEepu/7LuArn0XnoD/xLoJtH
      HvkKALLVQX2Zg5//7BfksmkeeOS7EG38VBEgvVXLKdI/5P0P/ogsSdz3lW+yptbP3/7sFzjt
      fh77/qOUegR/9/O/547Pf5EbrlnNW2+/i8NmYfnGG7l+y/X86m//J8XFJfSOh6c3mTMuG1+g
      WLCFP+4L8cA9111sUUyuIC6b5cVtrkIWLXRcbDFMrjAumxrAxGQuMC3BJlc1Z6QAyVTyjBed
      MysUk8uJM1KA1tbWMx6RO3UlSBOTS5kzUoCziXVjYnI5Me0o0MFdW2nrDeZ37D5zjTCTK5Jp
      R4F0TUPV1DErrITT6TijyF26rqMoZjxok8uDaZtAisVC85F9vPHGG/x/P/1fpluuyRXJjH0A
      SZZRFAWv13uh5DExuaDMqAALahdiUWQefuihGVeHMTG5XJlRAV554UVWbbyWV174wySPzMG+
      Lo43HCMwGqOjtYkjx45PG6rQxORSZkZXiLee+w2BrIX+7k5ql63h4Qc+j1WR0XWdRGiIgVAa
      Q0BtocwQ5dSVOuc0nr6Jyflmxpy6aMkS0HWWrNnMI1+8F6uSPz3Y18VgVGNxXSVIEpIsmRZg
      k8uSGb1Bt+/cz32Pfoenfv3PGOIOlLFuQHA0hN3lJZLUcJCldVCwcrUHeWyyi1kDmFwuTNsE
      EkIw0NnI1t2HWLRiI5vWLj2jiSKmHcDkcmLaGqBl/4d8cHiAeDzOI19beiFlMjG5YEzbVunv
      78dqdxDoa+f1dz+akxhBJiYXm2mbQGouSzqTHTtLxutxm64QJlcc09YAVpudnKri8/nQ1DNf
      38rE5HJiWgUY6m3nr376U95+6y1+9o9PmL5AJlck0zaB0sk4H3+yk+XLluPy+Cgq8JlNIJMr
      jmlHgZxuL8nhfraNhlAcfh6+/7OfKl6OicmlyIyGMC2bobCmDrfTfaHkMTG5oMxosr39ni9g
      5HK4bBaz9De5IplRAd5+9WWGUyoHD+w2O8EmVyQzKsA112xEjQYoKK/DnA5gciUyowJs33OQ
      r3/jW4QG2yfVAKHhQY42toIQtDUf5/CRY2hmNBSTy5AZO8F33n4Tzz/1G+pXbp5UA/gKSxkO
      xdHVNFlsLK5Q6AomWFjmQghhxgYyuWyYUQGONzTxmc89wPziyXOCLZbJlwlDnJGNwMTkUmNG
      BSgrK+aDN17GXVjOQyfZAYb6u4lEwozESnHJGh3DghUr3eZ8AJPLjhkVwNA0RrMSBUZq0vF5
      VQuYV7Ugv1NSOGfCmZjMNTMW1S1tnZQUuGjv7jNX6zG5Ipm2BjD0HAvqFjKahs/fdTeKOQ5q
      cgUybQ2w/8PXiVnLaG5qpKzIdyFlMjG5YEyrAEKx0NV8hHg0xNMvvWnOCDO5IplxUvyJr6T8
      sqimO7TJFca0NYAkSciyjCzLtLW3mesDmFxR6NkMif6uWYZBDQMhBH6fz/QGNbksEUKgpZOk
      gwNE248TbWsg0d+FlknhLC6fOTTii79/gqziorWlmeKKWr7/3W9imWU0yGwCmVwohGFgqFn0
      bJZcLEx6dIjMSJDMaIDMaIBsNEQ2MookgbOsEn/9Cvz1K/BU1WHzFSLJ8sw1gNA1Squrae/u
      x6nk0HQxqwKYmJwtQggwDIRhIAwdIQyErqNlUujpJLlEjGwoSHpkLGOHR8hGQ6iJGLLFgmJz
      YPMX4igux1Fcjmd+LSVrr8XmL8LuK8Licp+4j64hdA09NooaCcxcA/R0tBBOZKiqqcMuCzze
      2ZdKMmuAKxMhBIz9CU5s62oOPZNGz6bRM2m0sc/8sRTaxHYaLZ1CyyTR0+l85s6k0DIpjFwW
      JBlJlpFkJf+pKFgcLhSnG6vbi6OoNJ/BS8pxFJZi8xdh8xYgyfIJ2QwdI5NEDQfQxv7UcAAt
      MowWHUaPjQIgWazIDg+WwrKZFWCot4M9+w7Q2h/h3/zwu1OuEdDf00E0I1i+pB4JUwEudYQQ
      GLksajKOlkqgpuJoyfHPOGoyjppKjG0n0FL5Y3omnU9AkvKjgRKAhGy1YXE4URwuFLsTxeHM
      749tK/axfYcTi8ON4nRhcbjGMnf+U7bZZx1hNLIp1HAwn7EjQbTw0KR9YRj5gRunB0tBGZbC
      cqyF5VgKy/P7/lIs/iIkxTop3RkVYP8nf6Sle5glq9ezYeXi04Q01DQNbb3U+CTCjvnUFjtN
      BTgbhEAIA0PTEJqGoav5bV3D0NSxYxpCm3zc0FT0XBY9ncyXqmOfeiY5sa2lk+iZFELXx0rI
      /ICGMAwUmwOr24PF5cXi9mB1ebC4vVhdXqxuLxaXB4tr7PjYp+JwTMiMyDdXJm0bOhg6YuwT
      oeebNUIHYYBh5JsfagYjk8TIJDDSifxnJpnfziYR4/uZJEZ2bDsVQ+g5FJcPxeXB4ivC4i/B
      UlCS//QXI0ly/j4if29hjN9XB0NF6BroKhgq6GP7hjpTH0CwaOkqwtFdHDl2nPUrF582EiQM
      A0VRcDgsZLMq4PyU+cHACDYjtPQ5JnDKxqn7CCaP54oTPk6Gls8sEz+iMfYDjv3QY9W+GM+Q
      ag5DzSJO+hS6itDU/PW6hqHl8sc1dWI7f252LIOr+R+JfPqSOCGrRL6pceKYOPH+JwpgCVkS
      2JCwyxKSrCArMpIiIzlkJJeMNFZiS/J4yS0hSVkgkk9HExATEMvfc/wmkgRCktAk0PKXjV07
      dv/xWmD8uwmhOO1zouA86bgsSfk5JmPfSZIEDgVcCsgKSDaQS5GkeWP7cv5cST7xRxS0OFKo
      +7TvpFO3FRksMkgKYJ04f1oFOPDRq7y6u5uVlTZWb/kK8hRVlGxzQjZBQ5fBynU16GOlTS6X
      m3jx4wa1cRfpk2sIY6zaGj/P0DWssY6LtxyTBChjf1N+KQG2sb/zFSljhmeVZjtHmmJzqnOl
      KXbHMh7SaceuJqZtAmm5LO0tjezbt4eYUsL3H31wSiU4FbMJZHI5MWMfYJyTS+rZGK8FznWG
      2MW49nK758W675V47RkpwNnyaWqBi/GiLoa846/9XK8915l3FysjXqp5Yk4UwMTkcuGqnryb
      L0kvthRXPpM9iy8tZnSFuBxJhgZo6Euwec1i9n70AUtvvAOfdepzI/3NqIXLKBsb0AkO9DAa
      TeDwFCJlY8SSaWrqlxDo7SKVzrJ02SKaWzpxuD0sX7xwDqQ36OjoZuHCulnPHOztIhJP4i4o
      JRsLkszoLF6ymN7uLrI5jYULq2lv78Xl87Nk4YJzlkhX0zQ2tiHbnCxbtmiKElOno6NnRpmH
      ettxldbhd07dBDLUDC1tnWRzORbWLaC9oxunp4ASn5XgaBSLw4NVTxJNZKhbugKf0zar3A1H
      DiIpVgpKq6gsm37e+hWnALqukU6lUHMpkskcqq7S0t5OMmfgEBlSWCl020jnDPw2lf62Zvok
      jQ1rVlJaUY3VOshQJIOWUVmxtJ6W3iDLly3j6L69dHX2snDFSgZbjqMaYJ2D+jOZTNLc3MrS
      pfM4dnSUeLQLi81FdXUV/UMj2B0uVi1fzLz5C7AO9RHKpMiqMstqCukNZViyZAlHDx2kr6OP
      RatX03X82KeSx9BVkuksS+vqGenrZCiSxObwkBwdxG634S4uo7m5BY/PS29nJ7psw+9SQLYQ
      CI7gsDmYV+qmvbUJSZJxyjlUTaO0ej5HPjnG6us2Mq/Yz9Klizly6BD9PT3ULV9DT8sxiupX
      YbdZ6RiMkNFUVi+v5Xh3gFVLqmeV22J3s2TJYhoajpMY6SWnqRSWVjPQ30d5ZSXhwV505Cuz
      CVRV5ufAwSYqa+aTiY6SyBnEEnEsdjdr16wimzNYsWI5boeNukVLcTnyVUSgr5NgXGPZonyJ
      KQwdWYLDB/azYPla/HYZTTcQYsJ+c14RwiA/Fi/G7G6CorIKFlSUMRwMgGxh3FDW39VKNKew
      uLYaEGi6jiLrHDxwiIUr1uB2jMn6KWWy2L1cs3EtXY1H6QmOYrVYQAi8/mKWL12IqitUz5+P
      3ymRSKlYAVWxsWTJUsrLSykr8iJkK/WLl2GTDcLhMBabAz2XYcGiZVSUFIDQObj/IHXLVuN1
      WNB1HYBQoJeuQJxVyxYBYOg68ll1pPNN3FA4jMXmJB3qo7h6CTWVRUQiCawWC8rjjz/++Kd8
      R5cUwtCxeYtQsxnmFfuxe7wkYzFcbg/FhX7cHg9OC7R39eLyeHC4fChoeDweBgf7MXQdHQW3
      DXqHRllQU8FwMEw2m6RyQR19bS24Ckoo8ntnF+Ys0LUsrS2tlFbWYBU5BoZG8BQU4XHZcTmd
      +IvLSMejuL0FFPi9DA70o+saQrZjI0cgmqO61MNoJEk2naaypoaetlb8xeX4vedutNPVNK2t
      HVhcPpbWzicUjuEvKGR0sJdYxqCutoZMIoxk92OTNBS7k8ICHx63G13XcToc2O12Bvp7KSiZ
      R0mBl3RWo7i0BKtix+1xoKVjBMIJspkUFfNr6OtowVdURiYZRxg6WR18DpnuwTCL6hdgUWYv
      tyMjQwRHQlTW1FLgdpLK5CivXkRyuJukKlPgtaNjMUeBTM6NocEh5lXMu9hifGpMBTC5qrki
      +wAmJmeKqQAmVzWmAphc0XQ07OPjfQ0IofHU08+gn7LU0RVnBzAxOZnerlb29kusKsmxr2mI
      zwZ7eOq5V1iwfCOe7JDZCTa5stn6xjMMJm3okoKEyjxFpe7WB/jklWdxuRxmE8jkysbt9bNp
      01oSaZ2yAj+rN1/DK0/+I7aSaor8BWYNYHJ1Y9YAJlc1pgL8/+3TgQAAAACAIH/rQS6HWBOA
      NQFYE4C1ALAUCLk6K4T4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
      CEBg1vw/Gkfgp3t2Pq0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
